#name workflows
name: Continous Intergration and Deployment

#specify when this action should run
on: 
  #Add push if we would like to run this CI proccess when somebody has pushed to our respo
  push:
    #specify branches that we want to run this CI proccess
    branches:
      - Master
#a complex project mght have multiple jobs. With it project we just have a single job which is used to compile our .net app
jobs: 
  #give the job a name
  build: 
    #specify on which platform our build should run
    runs-on: windows-latest
    steps:
      - name: Check out code
        #use the action that we would like to use
        uses: actions/checkout@v2

      - name: Setup dotnet 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build app
        run: dotnet build -c Release --no-restore

      - name: Run automatic test
        run: dotnet test -c Release --no-build
      #sonar action workflows
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"blog-c1_blog-be" /o:"blog-c1" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build <blog-be.sln>
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
